services:
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: github_spam
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:4
    restart: always
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy

  api:
    build:
      context: ..
      dockerfile: Dockerfile
    image: gh-spam-lab:latest
    env_file: .env
    environment:
      DATABASE__URL: postgres://postgres:postgres@postgres:5432/github_spam
      API__BIND: 0.0.0.0:3000
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_SERVICE_NAME: api
    ports:
      - "3000:3000"
    volumes:
      - ../config:/srv/app/config:ro
      - ../scripts:/srv/app/scripts:ro
      - ../logs:/logs
    command:
      ["/bin/sh", "-c", "/usr/local/bin/api 2>&1 | tee -a /logs/api.log"]
    depends_on:
      postgres:
        condition: service_healthy
      otel-collector:
        condition: service_started

  collector:
    image: gh-spam-lab:latest
    env_file: .env
    environment:
      DATABASE__URL: postgres://postgres:postgres@postgres:5432/github_spam
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_SERVICE_NAME: collector
    command:
      ["/bin/sh", "-c", "/usr/local/bin/collector --flags 2>&1 | tee -a /logs/logs.txt"]
    ports:
      - "9091:9091"
    volumes:
      - ../config:/srv/app/config:ro
      - ../scripts:/srv/app/scripts:ro
      - ../logs:/logs
    depends_on:
      postgres:
        condition: service_healthy
      otel-collector:
        condition: service_started

  prometheus:
    image: prom/prometheus:v2.48.0
    volumes:
      - ./obs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./obs/alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      collector:
        condition: service_started
      alertmanager:
        condition: service_started
      api:
        condition: service_started

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.103.0
    command: ["--config=/etc/otelcol/config.yaml"]
    volumes:
      - ./obs/otel-collector-config.yaml:/etc/otelcol/config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Collector metrics
      - "13133:13133" # Health check
    healthcheck:
      test: ["CMD", "/otelcol-contrib", "--version"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      postgres:
        condition: service_started

  tempo:
    image: grafana/tempo:2.5.0
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./obs/tempo.yaml:/etc/tempo.yaml:ro
    ports:
      - "3200:3200" # Tempo HTTP API
    depends_on:
      otel-collector:
        condition: service_started

  grafana:
    image: grafana/grafana:10.2.0
    env_file: .env
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: 'true'
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_DISABLE_LOGIN_FORM: 'true'
      ALERT_DISCORD_WEBHOOK_URL: ${ALERT_DISCORD_WEBHOOK_URL}
    ports:
      - "3100:3000"
    volumes:
      - ./obs/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./obs/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./obs/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./obs/grafana/provisioning/alerting:/etc/grafana/provisioning/alerting:ro
    depends_on:
      prometheus:
        condition: service_started
      tempo:
        condition: service_started
      loki:
        condition: service_started

  alertmanager:
    image: prom/alertmanager:v0.27.0
    env_file: .env
    environment:
      - ALERT_DISCORD_WEBHOOK_URL=${ALERT_DISCORD_WEBHOOK_URL}
    command: ["--config.file=/etc/alertmanager/alertmanager.yml", "--web.listen-address=:9093", "--config.expand-environment-variables"]
    volumes:
      - ./obs/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports:
      - "9093:9093"

  loki:
    image: grafana/loki:2.9.7
    command: ["-config.file=/etc/loki/config.yml"]
    volumes:
      - ./obs/loki-config.yaml:/etc/loki/config.yml:ro
    ports:
      - "3100:3100"

  promtail:
    image: grafana/promtail:2.9.7
    command: ["-config.file=/etc/promtail/config.yml"]
    volumes:
      - ./obs/promtail-config.yaml:/etc/promtail/config.yml:ro
      - ../logs:/var/log/gh:ro
    depends_on:
      loki:
        condition: service_started

volumes:
  postgres_data:
